version: "3.8"

services:
  server:
    build:
      context: .
      dockerfile: Dockerfile-minitwit
    ports:
      - 5000:5000
    restart: always
    volumes:
      - .:/minitwit
    command:
      - /bin/sh
      - -c
      - |
        sleep 5
        chown 777 -R ./data/database/
        python3 ./manage.py migrate --run-syncdb
        python3 ./manage.py runserver 0.0.0.0:5000
    networks:
      - djangonetwork
    links:
      - db:db
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15.2
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: db
    networks:
      - djangonetwork
    volumes:
      - ./data/database:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  simulator:
    build:
      context: .
      dockerfile: Dockerfile-simulator
    volumes:
      - ./API_Spec:/api_spec
    profiles: ["simulator"]

networks:
  djangonetwork:
      driver: bridge
