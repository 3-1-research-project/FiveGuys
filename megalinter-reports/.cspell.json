{
    "ignorePaths": [
        "**/node_modules/**",
        "**/vscode-extension/**",
        "**/.git/**",
        "**/.pnpm-lock.json",
        ".vscode",
        "megalinter",
        "package-lock.json",
        "report"
    ],
    "language": "en",
    "noConfigSearch": true,
    "version": "0.2",
    "words": [
        "ASGI",
        "Armin)         -- copyright: (c",
        "Armin)      -- copyright: (c",
        "Blub",
        "Buildx",
        "Connor",
        "Cython",
        "Helge)         -- copyright: (c",
        "Linaro)     -- P\u000e@\u0000\u0000\u0000\u0000\u0000GCC: (Ubuntu/Linaro 4.6.3-1ubuntu5",
        "MINITWIT",
        "Macbooks",
        "Minitwit",
        "Pipfile",
        "Ronacher)      -- copyright: (c",
        "Ronacher)   -- copyright: (c",
        "SNYK",
        "Scrapy",
        "Snyk",
        "Spyder",
        "Unfollow",
        "Wxhd",
        "asgi",
        "asgi)       -- application = get_asgi_application(",
        "autoincrement",
        "buildx",
        "celerybeat",
        "collectstatic",
        "crtstuff",
        "cython",
        "datetimeformat",
        "deadsnakes",
        "djangonetwork",
        "dmypy",
        "dynstr",
        "dynsym",
        "edata",
        "errmsg",
        "executescript) -- db.cursor().executescript(f.read(",
        "executescript) -- db.cursor().executescript(fp.read()",
        "fini",
        "fllws",
        "fllws)      -- simviews.follow_user, name=\"fllws_user\"",
        "followstatus",
        "fozr",
        "fprintf",
        "gmon",
        "healthcheck",
        "htmlcov",
        "inspectdb",
        "interp",
        "ipynb",
        "ipython",
        "isready",
        "jsonify",
        "jsonify)       -- return jsonify(filtered_msgs",
        "jsonify)       -- return jsonify({\"latest\": LATEST}",
        "keyscan",
        "levelname",
        "libc",
        "libpq",
        "libsqlite",
        "marvinpinto",
        "megalinter",
        "mergetool",
        "microblogging",
        "minitwit",
        "minitwit)   -- DJANGO_SETTINGS_MODULE\", \"minitwit.prod_settings\"",
        "minitwit)   -- DJANGO_SETTINGS_MODULE\", \"minitwit.settings\"",
        "minitwit)   -- minitwit.init_db(",
        "minitwit)   -- nohup $(which python3",
        "minitwit)   -- self.app = minitwit.app.test_client(",
        "minitwit)   -- sqlite3_open(\"/tmp/minitwit.db\", &db",
        "minitwitimage",
        "mkdocs",
        "mypy",
        "nohup)      -- nohup $(which python3",
        "noninteractive",
        "nosetests",
        "okpjq",
        "oxsecurity",
        "pipenv",
        "pkill",
        "psycopg",
        "pybuilder",
        "pycache",
        "pyenv",
        "pyflow",
        "pypa",
        "pypackages",
        "pytest",
        "pytype",
        "rela",
        "rodata",
        "ropeproject",
        "runserver",
        "scrapy",
        "sdist",
        "shstrtab",
        "simviews",
        "skrrrrt",
        "snyk",
        "spyderproject",
        "spyproject",
        "stefanzweifel",
        "strcat",
        "strtab)     -- ubuntu5",
        "symtab)     -- 3-1ubuntu5",
        "syncdb",
        "templatetags",
        "twitbox",
        "unflagged",
        "unfollow",
        "unfollow)      -- app.route(\"/<username>/unfollow\"",
        "unfollow)      -- def unfollow_user(username",
        "unfollow)   -- loads(request.body",
        "unfollows",
        "unfollows)     -- def test_a_unfollows_b(",
        "unfollows)     -- execute(query, [user_id, unfollows_user_id]",
        "unfollows)     -- user_id = get_user_id(unfollows_username",
        "updaet",
        "usermod",
        "vcpu",
        "venv",
        "webassets",
        "webbuildcache",
        "werkzeug",
        "wrongpassword) -- self.login(\"user1\", \"wrongpassword\"",
        "wrongpassword) -- self.login(\"user2\", \"wrongpassword\"",
        "wsgi",
        "ywdz"
    ]
}